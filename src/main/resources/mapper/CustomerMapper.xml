<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.casemng.repository.CustomerMapper">

	<select id="count" resultType="Long">
		select
		count(customer.id)
		from
		customer
		where
		customer.is_deleted = 0
		AND concat(customer.id, customer.last_name, customer.first_name, customer.address, customer.phone_number) like #{searchKey}
	</select>
	
	<select id="findAll" resultMap="cust">
		select
		customer.id,
		customer.last_name,
		customer.first_name,
		customer.zipcode,
		customer.address,
		customer.phone_number,
		customer.memo
		
		from
		customer
		where
		customer.is_deleted = 0
		order by customer.id ASC
		
	</select>
	
	<select id="findByKeyword" resultMap="cust">
		select
		customer.id,
		customer.last_name,
		customer.first_name,
		customer.zipcode,
		customer.address,
		customer.phone_number,
		customer.memo
		
		from
		customer
		where
		customer.is_deleted = 0
		AND concat(customer.id, customer.last_name, customer.first_name, customer.address, customer.phone_number) like #{searchKey}
		<choose>
            <when test="!pageable.sort.isEmpty()">
                ORDER BY
                <foreach item="order" collection="pageable.sort" separator=",">
                    ${order.property}
                    ${order.direction}
                </foreach>
            </when>
            <otherwise>
                ORDER BY id
            </otherwise>
        </choose>
	</select>
	
	<select id="findById" resultMap="cust">
		select
		customer.id,
		customer.last_name,
		customer.first_name,
		customer.zipcode,
		customer.address,
		customer.phone_number,
		customer.memo,
		
		cases.id as case_id,
		cases.case_name as case_case_name,
		cases.customer_id as case_customer_id,
		cases.case_date as case_case_date,
		cases.shipping_status as case_shipping_status,
		cases.shipping_stock_flg as case_shipping_stock_flg,
		cases.memo as case_memo,
		
		orders.id as case_ord_id,
		orders.order_date as case_ord_order_date,
		orders.memo as case_ord_memo,
		
		order_product.id as case_ord_ordPr_id,
		order_product.quantity as case_ord_ordPr_quantity,
		order_product.discount as case_ord_ordPr_discount,
		order_product.is_deleted as case_ord_ordPr_is_deleted,
		
		product.id as case_ord_ordPr_prdu_id,
		product.product_name as case_ord_ordPr_prdu_product_name,
		product.price as case_ord_ordPr_prdu_price,
		product.stock as case_ord_ordPr_prdu_stock,
		product.is_choose as case_ord_ordPr_prdu_is_choose,
		
		quotation.id as case_quot_id,
		quotation.quotation_date as case_quot_quotation_date,
		quotation.memo as case_quot_memo,
		
		quotation_product.id as case_quot_quoPr_id,
		quotation_product.quantity as case_quot_quoPr_quantity,
		quotation_product.discount as case_quot_quoPr_discount,
		quotation_product.is_deleted as case_quot_quoPr_is_deleted,
		
		qProduct.id as case_quot_quoPr_qPrdu_id,
		qProduct.product_name as case_quot_quoPr_qPrdu_product_name,
		qProduct.price as case_quot_quoPr_qPrdu_price,
		qProduct.stock as case_quot_quoPr_qPrdu_stock,
		qProduct.is_choose as case_quot_quoPr_qPrdu_is_choose,
		
		inquiry.id as case_inqu_id,
		inquiry.inquiry_date as case_inqu_inquiry_date,
		inquiry.contents as case_inqu_contents
		
		from
		customer
		LEFT JOIN cases on customer.id = cases.customer_id AND (cases.is_deleted = 0 OR cases.is_deleted IS NULL)
		
		LEFT JOIN orders on cases.id = orders.case_id AND (orders.is_deleted = 0 OR orders.is_deleted IS NULL)
		left join order_product on orders.id = order_product.orders_id AND (order_product.is_deleted = 0 OR order_product.is_deleted IS NULL)
		left join product on order_product.product_id = product.id
		
		LEFT JOIN quotation on cases.id = quotation.case_id AND (quotation.is_deleted = 0 OR quotation.is_deleted IS NULL)
		LEFT JOIN quotation_product ON quotation.id = quotation_product.quotation_id AND (quotation_product.is_deleted = 0 OR quotation_product.is_deleted IS NULL)
		LEFT JOIN product as qProduct ON quotation_product.product_id = qProduct.id
		
		LEFT JOIN inquiry on cases.id = inquiry.case_id AND (inquiry.is_deleted = 0 OR inquiry.is_deleted IS NULL)
		where
		customer.id = #{id}
		AND customer.is_deleted = 0
	</select>
	
	<update id="customerEdit">
		update customer
		set
		  last_name = #{lastName},
		  first_name = #{firstName},
		  zipcode = #{zipcode},
		  address = #{address},
		  phone_number = #{phoneNumber},
		  memo = #{memo}
		where
		  customer.id = #{id}
	</update>
	
	<update id="logicalDelete">
		update customer
		set
		is_deleted = 1
		where
		id = #{id}
	</update>
	
	<insert id="create" useGeneratedKeys="true" keyProperty="id">
		insert into customer(
		  last_name,
		  first_name,
		  zipcode,
		  address,
		  phone_number,
		  memo
		)values(
		  #{lastName},
		  #{firstName},
		  #{zipcode},
		  #{address},
		  #{phoneNumber},
		  #{memo}
		)
	</insert>
	
	<resultMap type="com.example.casemng.entity.Customer" id="cust">
		<id property="id" column="id" />
		<result property="lastName" column="last_name" />
		<result property="firstName" column="first_name" />
		<result property="zipcode" column="zipcode" />
		<result property="address" column="address" />
		<result property="phoneNumber" column="phone_number" />
		<result property="memo" column="memo" />
		<result property="isDeleted" column="is_deleted" />
		<association property="cases" resultMap="case" columnPrefix="case_" />
	</resultMap>
	
	<resultMap type="com.example.casemng.entity.Case" id="case">
		<id property="id" column="id" />
		<result property="caseName" column="case_name" />
		<result property="customerId" column="customer_id" />
		<result property="caseDate" column="case_date" />
		<result property="shippingStatus" column="shipping_status" />
		<result property="shippingStockFlg" column="shipping_stock_flg" />
		<result property="memo" column="memo" />
		<result property="isDeleted" column="is_deleted" />
		<association property="order" resultMap="ord" columnPrefix="ord_"/>
		<collection property="quotation" resultMap="quot" columnPrefix="quot_"/>
		<collection property="inquiry" resultMap="inqu" columnPrefix="inqu_"/>
	</resultMap>
	
	<resultMap type="com.example.casemng.entity.Order" id="ord">
		<id property="id" column="id" />
		<result property="orderDate" column="order_date" />
		<result property="memo" column="memo" />
		<collection property="orderProduct" resultMap="ordPr" columnPrefix="ordPr_"/>
	</resultMap>
	
	<resultMap type="com.example.casemng.entity.OrderProduct"
		id="ordPr">
		<id property="id" column="id" />
		<result property="ordersId" column="orders_id" />
		<result property="productId" column="product_id" />
		<result property="quantity" column="quantity" />
		<result property="discount" column="discount" />
		<result property="isDeleted" column="is_deleted" />
		<association property="product" resultMap="prdu"
			columnPrefix="prdu_" />
	</resultMap>

	<resultMap type="com.example.casemng.entity.Product"
		id="prdu">
		<id property="id" column="id" />
		<result property="productName" column="product_name" />
		<result property="productCategoryId"
			column="product_category_id" />
		<result property="price" column="price" />
		<result property="stock" column="stock" />
		<result property="choose" column="is_choose" />
	</resultMap>
	
	<resultMap type="com.example.casemng.entity.Quotation" id="quot">
		<id property="id" column="id" />
		<result property="quotationDate" column="quotation_date" />
		<result property="memo" column="memo" />
		<collection property="quotationProduct" resultMap="quoPr" columnPrefix="quoPr_"/>
	</resultMap>
	
	<resultMap type="com.example.casemng.entity.QuotationProduct"
		id="quoPr">
		<id property="id" column="id" />
		<result property="quotationId" column="quotation_id" />
		<result property="productId" column="product_id" />
		<result property="quantity" column="quantity" />
		<result property="discount" column="discount" />
		<result property="isDeleted" column="is_deleted" />
		<association property="product" resultMap="qPrdu"
			columnPrefix="qPrdu_" />
	</resultMap>

	<resultMap type="com.example.casemng.entity.Product"
		id="qPrdu">
		<id property="id" column="id" />
		<result property="productName" column="product_name" />
		<result property="productCategoryId"
			column="product_category_id" />
		<result property="price" column="price" />
		<result property="stock" column="stock" />
		<result property="choose" column="is_choose" />
	</resultMap>
	
	<resultMap type="com.example.casemng.entity.Inquiry" id="inqu">
		<id property="id" column="id" />
		<result property="inquiryDate" column="inquiry_date" />
		<result property="contents" column="contents" />
	</resultMap>
</mapper>