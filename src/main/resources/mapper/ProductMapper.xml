<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.casemng.repository.ProductMapper">

	<select id="count" resultType="Long">
		select
		count(product.id)

		from
		product
		where
		concat(product.id, product.product_name, product.price, product.stock, product.is_choose) like #{searchKey}
	</select>
	
	<select id="findAll" resultMap="prod">
		select
		product.id,
		product.product_name,
		product.price,
		product.stock,
		product.is_choose

		from
		product
	</select>

	<select id="findAllForSelect" resultMap="prod">
		select
		product.id,
		product.product_name,
		product.price,
		product.stock,
		product.is_choose

		from
		product
		where
		product.is_choose = 0
	</select>

	<select id="findAllForSelectStock" resultMap="prod">
		select
		product.id,
		product.product_name,
		product.price,
		product.stock,
		product.is_choose

		from
		product
		where
		product.is_choose = 0
		and product.stock > 0
	</select>

	<select id="findById" resultMap="prod">
		select
		product.id,
		product.product_name,
		product.price,
		product.stock,
		product.is_choose

		from
		product
		where
		product.id = #{id}
	</select>

	<select id="findByKeyword" resultMap="prod">
		select
		product.id,
		product.product_name,
		product.price,
		product.stock,
		product.is_choose

		from
		product
		where
		concat(product.id, product.product_name, product.price, product.stock, product.is_choose) like #{searchKey}
		<choose>
			<when test="!pageable.sort.isEmpty()">
				ORDER BY
				<foreach item="order" collection="pageable.sort"
					separator=",">
					${order.property}
					${order.direction}
				</foreach>
			</when>
			<otherwise>
				ORDER BY id
			</otherwise>
		</choose>
	</select>

	<update id="edit">
		update product
		set
		stock = #{stock},
		is_choose = #{choose}
		where
		id = #{id}
	</update>

	<update id="editStock" parameterType="java.util.List">
		<foreach collection="list" item="item" separator=";">
			UPDATE
			product
			SET
			stock = stock - #{item.quantity}
			WHERE
			id = #{item.productId}
		</foreach>
	</update>

	<insert id="create">
		insert into product
		(
		product_name,
		price,
		stock,
		is_choose
		)
		values
		(
		#{productName},
		#{price},
		#{stock},
		#{choose}
		)
	</insert>

	<resultMap type="com.example.casemng.entity.Product"
		id="prod">
		<id property="id" column="id" />
		<result property="productName" column="product_name" />
		<result property="price" column="price" />
		<result property="stock" column="stock" />
		<result property="choose" column="is_choose" />
	</resultMap>

</mapper>